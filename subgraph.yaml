specVersion: 0.0.2
schema:
  file: ./schema.graphql
features:
  - ipfsOnEthereumContracts
dataSources:
  # Avatar NFT contract
  - kind: ethereum
    name: AvatarNFT
    network: rinkeby
    source:
      address: "0xE7254468763a8d4f791f30F5e8dcA635DF850772"
      abi: AvatarNFT
      startBlock: 10607301
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Transfer
        - URI
      abis:
        - name: AvatarNFT
          file: ./abis/AvatarNFT.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleTransfer
        - event: URI(string,indexed uint256)
          handler: handleURI
        - event: OpinionChange(uint256,indexed address,indexed uint256,string,bool,uint256)
          handler: handleOpinionChange
      file: ./src/avatar-nft-mapping.ts
  # Jurisdiction contract
  - kind: ethereum
    name: Jurisdiction
    network: rinkeby
    source:
      address: "0x22A339004E2a005ED5D5b94C83EEA2E47BE249EB"
      abi: Jurisdiction
      startBlock: 10607325
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - TransferSingle
        - RuleAdded
        - RuleEffects
        - Confirmation
      abis:
        - name: Jurisdiction
          file: ./abis/Jurisdiction.json
        - name: Case
          file: ./abis/Case.json
      eventHandlers:
        - event: TransferSingle(indexed address,indexed address,indexed address,uint256,uint256)
          handler: handleTransferSingle
        - event: Rule(indexed uint256,bytes32,string,string,bool)
          handler: handleRuleAdded
        - event: RuleEffect(indexed uint256,bool,uint8,string)
          handler: handleRuleEffect
        - event: Confirmation(indexed uint256,string,bool,uint256)
          handler: handleConfirmation
        - event: CaseCreated(indexed uint256,address)
          handler: handleCaseCreated
      file: ./src/jurisdiction-mappings.ts
  # Action repository contract
  - kind: ethereum
    name: ActionRepo
    network: rinkeby
    source:
      address: "0xe699f8dd6968F7a60786E846899CEf56154D3573"
      abi: ActionRepo
      startBlock: 10607324
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - ActionAdded
        - ActionURI
      abis:
        - name: ActionRepo
          file: ./abis/ActionRepo.json
      eventHandlers:
        - event: ActionAdded(indexed uint256,indexed bytes32,string,string,string,string)
          handler: handleActionAdded
        - event: ActionURI(indexed bytes32,string)
          handler: handleActionURI
      file: ./src/action-repo-mappings.ts
templates:
  # Case contract template
  - kind: ethereum
    name: Case
    network: rinkeby
    source:
      abi: Case
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - TransferSingle
        - RuleAdded
        - Post
        - Stage
        - Verdict
        - Cancelled
        - RuleConfirmed
      abis:
        - name: Case
          file: ./abis/Case.json
      eventHandlers:
        - event: TransferSingle(indexed address,indexed address,indexed address,uint256,uint256)
          handler: handleTransferSingle
        - event: RuleAdded(address,uint256)
          handler: handleRuleAdded
        - event: Post(indexed address,string,string)
          handler: handlePost
        - event: Stage(uint8)
          handler: handleStage
        - event: Verdict(string,address)
          handler: handleVerdict
        - event: Cancelled(string,address)
          handler: handleCancelled
        - event: RuleConfirmed(uint256)
          handler: handleRuleConfirmed
      file: ./src/case-mappings.ts