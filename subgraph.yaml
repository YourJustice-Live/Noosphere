specVersion: 0.0.2
schema:
  file: ./schema.graphql
features:
  - ipfsOnEthereumContracts
dataSources:
  # Avatar NFT contract
  - kind: ethereum
    name: AvatarNFT
    network: rinkeby
    source:
      address: "0x41966B4485CBd781fE9e82f90ABBA96958C096CF"
      abi: AvatarNFT
      startBlock: 10454845
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Transfer
        - URI
      abis:
        - name: AvatarNFT
          file: ./abis/AvatarNFT.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleTransfer
        - event: URI(string,indexed uint256)
          handler: handleURI
        - event: ReputationChange(indexed uint256,uint8,uint8,uint256)
          handler: handleReputationChange
      file: ./src/avatar-nft-mapping.ts
  # Jurisdiction contract
  - kind: ethereum
    name: Jurisdiction
    network: rinkeby
    source:
      address: "0x93Cb004fd336f9918d1198bA193e04B396925940"
      abi: Jurisdiction
      startBlock: 10504598
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - TransferSingle
        - RuleAdded
        - RuleEffects
        - Confirmation
      abis:
        - name: Jurisdiction
          file: ./abis/Jurisdiction.json
        - name: Case
          file: ./abis/Case.json
      eventHandlers:
        - event: TransferSingle(indexed address,indexed address,indexed address,uint256,uint256)
          handler: handleTransferSingle
        - event: Rule(indexed uint256,bytes32,string,string,bool)
          handler: handleRuleAdded
        - event: RuleEffects(indexed uint256,int8,int8,int8,int8)
          handler: handleRuleEffects
        - event: Confirmation(indexed uint256,string,bool,uint256)
          handler: handleConfirmation
        - event: CaseCreated(indexed uint256,address)
          handler: handleCaseCreated
      file: ./src/jurisdiction-mappings.ts
  # Action repository contract
  - kind: ethereum
    name: ActionRepo
    network: rinkeby
    source:
      address: "0x8b382adbfC940eae42AfC11eF389e5dA6597Fa06"
      abi: ActionRepo
      startBlock: 10454846
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - ActionAdded
        - ActionURI
      abis:
        - name: ActionRepo
          file: ./abis/ActionRepo.json
      eventHandlers:
        - event: ActionAdded(indexed uint256,indexed bytes32,string,string,string,string)
          handler: handleActionAdded
        - event: ActionURI(indexed bytes32,string)
          handler: handleActionURI
      file: ./src/action-repo-mappings.ts
templates:
  # Case contract template
  - kind: ethereum
    name: Case
    network: rinkeby
    source:
      abi: Case
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - TransferSingle
        - RuleAdded
        - Post
        - Stage
        - Verdict
        - Cancelled
      abis:
        - name: Case
          file: ./abis/Case.json
      eventHandlers:
        - event: TransferSingle(indexed address,indexed address,indexed address,uint256,uint256)
          handler: handleTransferSingle
        - event: RuleAdded(address,uint256)
          handler: handleRuleAdded
        - event: Post(indexed address,string,string)
          handler: handlePost
        - event: Stage(uint8)
          handler: handleStage
        - event: Verdict(string,address)
          handler: handleVerdict
        - event: Cancelled(string,address)
          handler: handleCancelled
      file: ./src/case-mappings.ts