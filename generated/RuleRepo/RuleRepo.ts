// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Confirmation extends ethereum.Event {
  get params(): Confirmation__Params {
    return new Confirmation__Params(this);
  }
}

export class Confirmation__Params {
  _event: Confirmation;

  constructor(event: Confirmation) {
    this._event = event;
  }

  get originAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get id(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get ruling(): string {
    return this._event.parameters[2].value.toString();
  }

  get evidence(): boolean {
    return this._event.parameters[3].value.toBoolean();
  }

  get witness(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class Reaction extends ethereum.Event {
  get params(): Reaction__Params {
    return new Reaction__Params(this);
  }
}

export class Reaction__Params {
  _event: Reaction;

  constructor(event: Reaction) {
    this._event = event;
  }

  get originAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get id(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get reactionId(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class Rule extends ethereum.Event {
  get params(): Rule__Params {
    return new Rule__Params(this);
  }
}

export class Rule__Params {
  _event: Rule;

  constructor(event: Rule) {
    this._event = event;
  }

  get originAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get id(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get about(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get affected(): string {
    return this._event.parameters[3].value.toString();
  }

  get uri(): string {
    return this._event.parameters[4].value.toString();
  }

  get negation(): boolean {
    return this._event.parameters[5].value.toBoolean();
  }
}

export class RuleDisabled extends ethereum.Event {
  get params(): RuleDisabled__Params {
    return new RuleDisabled__Params(this);
  }
}

export class RuleDisabled__Params {
  _event: RuleDisabled;

  constructor(event: RuleDisabled) {
    this._event = event;
  }

  get originAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get id(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get disabled(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class RuleEffect extends ethereum.Event {
  get params(): RuleEffect__Params {
    return new RuleEffect__Params(this);
  }
}

export class RuleEffect__Params {
  _event: RuleEffect;

  constructor(event: RuleEffect) {
    this._event = event;
  }

  get originAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get id(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get direction(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }

  get value(): i32 {
    return this._event.parameters[3].value.toI32();
  }

  get name(): string {
    return this._event.parameters[4].value.toString();
  }
}

export class RuleRemoved extends ethereum.Event {
  get params(): RuleRemoved__Params {
    return new RuleRemoved__Params(this);
  }
}

export class RuleRemoved__Params {
  _event: RuleRemoved;

  constructor(event: RuleRemoved) {
    this._event = event;
  }

  get originAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get id(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RuleRepo__confirmationGetResultValue0Struct extends ethereum.Tuple {
  get ruling(): string {
    return this[0].toString();
  }

  get evidence(): boolean {
    return this[1].toBoolean();
  }

  get witness(): BigInt {
    return this[2].toBigInt();
  }
}

export class RuleRepo__effectsGetResultValue0Struct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get value(): i32 {
    return this[1].toI32();
  }

  get direction(): boolean {
    return this[2].toBoolean();
  }
}

export class RuleRepo__ruleAddInputRuleStruct extends ethereum.Tuple {
  get about(): Bytes {
    return this[0].toBytes();
  }

  get affected(): string {
    return this[1].toString();
  }

  get negation(): boolean {
    return this[2].toBoolean();
  }

  get uri(): string {
    return this[3].toString();
  }

  get disabled(): boolean {
    return this[4].toBoolean();
  }
}

export class RuleRepo__ruleAddInputConfirmationStruct extends ethereum.Tuple {
  get ruling(): string {
    return this[0].toString();
  }

  get evidence(): boolean {
    return this[1].toBoolean();
  }

  get witness(): BigInt {
    return this[2].toBigInt();
  }
}

export class RuleRepo__ruleAddInputEffectsStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get value(): i32 {
    return this[1].toI32();
  }

  get direction(): boolean {
    return this[2].toBoolean();
  }
}

export class RuleRepo__ruleGetResultValue0Struct extends ethereum.Tuple {
  get about(): Bytes {
    return this[0].toBytes();
  }

  get affected(): string {
    return this[1].toString();
  }

  get negation(): boolean {
    return this[2].toBoolean();
  }

  get uri(): string {
    return this[3].toString();
  }

  get disabled(): boolean {
    return this[4].toBoolean();
  }
}

export class RuleRepo extends ethereum.SmartContract {
  static bind(address: Address): RuleRepo {
    return new RuleRepo("RuleRepo", address);
  }

  confirmationGet(id: BigInt): RuleRepo__confirmationGetResultValue0Struct {
    let result = super.call(
      "confirmationGet",
      "confirmationGet(uint256):((string,bool,uint256))",
      [ethereum.Value.fromUnsignedBigInt(id)]
    );

    return changetype<RuleRepo__confirmationGetResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_confirmationGet(
    id: BigInt
  ): ethereum.CallResult<RuleRepo__confirmationGetResultValue0Struct> {
    let result = super.tryCall(
      "confirmationGet",
      "confirmationGet(uint256):((string,bool,uint256))",
      [ethereum.Value.fromUnsignedBigInt(id)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<RuleRepo__confirmationGetResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  effectsGet(id: BigInt): Array<RuleRepo__effectsGetResultValue0Struct> {
    let result = super.call(
      "effectsGet",
      "effectsGet(uint256):((string,uint8,bool)[])",
      [ethereum.Value.fromUnsignedBigInt(id)]
    );

    return result[0].toTupleArray<RuleRepo__effectsGetResultValue0Struct>();
  }

  try_effectsGet(
    id: BigInt
  ): ethereum.CallResult<Array<RuleRepo__effectsGetResultValue0Struct>> {
    let result = super.tryCall(
      "effectsGet",
      "effectsGet(uint256):((string,uint8,bool)[])",
      [ethereum.Value.fromUnsignedBigInt(id)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<RuleRepo__effectsGetResultValue0Struct>()
    );
  }

  repoAddr(): Address {
    let result = super.call("repoAddr", "repoAddr():(address)", []);

    return result[0].toAddress();
  }

  try_repoAddr(): ethereum.CallResult<Address> {
    let result = super.tryCall("repoAddr", "repoAddr():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  ruleAdd(
    rule: RuleRepo__ruleAddInputRuleStruct,
    confirmation: RuleRepo__ruleAddInputConfirmationStruct,
    effects: Array<RuleRepo__ruleAddInputEffectsStruct>
  ): BigInt {
    let result = super.call(
      "ruleAdd",
      "ruleAdd((bytes32,string,bool,string,bool),(string,bool,uint256),(string,uint8,bool)[]):(uint256)",
      [
        ethereum.Value.fromTuple(rule),
        ethereum.Value.fromTuple(confirmation),
        ethereum.Value.fromTupleArray(effects)
      ]
    );

    return result[0].toBigInt();
  }

  try_ruleAdd(
    rule: RuleRepo__ruleAddInputRuleStruct,
    confirmation: RuleRepo__ruleAddInputConfirmationStruct,
    effects: Array<RuleRepo__ruleAddInputEffectsStruct>
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "ruleAdd",
      "ruleAdd((bytes32,string,bool,string,bool),(string,bool,uint256),(string,uint8,bool)[]):(uint256)",
      [
        ethereum.Value.fromTuple(rule),
        ethereum.Value.fromTuple(confirmation),
        ethereum.Value.fromTupleArray(effects)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  ruleGet(id: BigInt): RuleRepo__ruleGetResultValue0Struct {
    let result = super.call(
      "ruleGet",
      "ruleGet(uint256):((bytes32,string,bool,string,bool))",
      [ethereum.Value.fromUnsignedBigInt(id)]
    );

    return changetype<RuleRepo__ruleGetResultValue0Struct>(result[0].toTuple());
  }

  try_ruleGet(
    id: BigInt
  ): ethereum.CallResult<RuleRepo__ruleGetResultValue0Struct> {
    let result = super.tryCall(
      "ruleGet",
      "ruleGet(uint256):((bytes32,string,bool,string,bool))",
      [ethereum.Value.fromUnsignedBigInt(id)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<RuleRepo__ruleGetResultValue0Struct>(value[0].toTuple())
    );
  }
}

export class RuleAddCall extends ethereum.Call {
  get inputs(): RuleAddCall__Inputs {
    return new RuleAddCall__Inputs(this);
  }

  get outputs(): RuleAddCall__Outputs {
    return new RuleAddCall__Outputs(this);
  }
}

export class RuleAddCall__Inputs {
  _call: RuleAddCall;

  constructor(call: RuleAddCall) {
    this._call = call;
  }

  get rule(): RuleAddCallRuleStruct {
    return changetype<RuleAddCallRuleStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get confirmation(): RuleAddCallConfirmationStruct {
    return changetype<RuleAddCallConfirmationStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }

  get effects(): Array<RuleAddCallEffectsStruct> {
    return this._call.inputValues[2].value.toTupleArray<
      RuleAddCallEffectsStruct
    >();
  }
}

export class RuleAddCall__Outputs {
  _call: RuleAddCall;

  constructor(call: RuleAddCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class RuleAddCallRuleStruct extends ethereum.Tuple {
  get about(): Bytes {
    return this[0].toBytes();
  }

  get affected(): string {
    return this[1].toString();
  }

  get negation(): boolean {
    return this[2].toBoolean();
  }

  get uri(): string {
    return this[3].toString();
  }

  get disabled(): boolean {
    return this[4].toBoolean();
  }
}

export class RuleAddCallConfirmationStruct extends ethereum.Tuple {
  get ruling(): string {
    return this[0].toString();
  }

  get evidence(): boolean {
    return this[1].toBoolean();
  }

  get witness(): BigInt {
    return this[2].toBigInt();
  }
}

export class RuleAddCallEffectsStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get value(): i32 {
    return this[1].toI32();
  }

  get direction(): boolean {
    return this[2].toBoolean();
  }
}

export class RuleConfirmationUpdateCall extends ethereum.Call {
  get inputs(): RuleConfirmationUpdateCall__Inputs {
    return new RuleConfirmationUpdateCall__Inputs(this);
  }

  get outputs(): RuleConfirmationUpdateCall__Outputs {
    return new RuleConfirmationUpdateCall__Outputs(this);
  }
}

export class RuleConfirmationUpdateCall__Inputs {
  _call: RuleConfirmationUpdateCall;

  constructor(call: RuleConfirmationUpdateCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get confirmation(): RuleConfirmationUpdateCallConfirmationStruct {
    return changetype<RuleConfirmationUpdateCallConfirmationStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class RuleConfirmationUpdateCall__Outputs {
  _call: RuleConfirmationUpdateCall;

  constructor(call: RuleConfirmationUpdateCall) {
    this._call = call;
  }
}

export class RuleConfirmationUpdateCallConfirmationStruct extends ethereum.Tuple {
  get ruling(): string {
    return this[0].toString();
  }

  get evidence(): boolean {
    return this[1].toBoolean();
  }

  get witness(): BigInt {
    return this[2].toBigInt();
  }
}

export class RuleDisableCall extends ethereum.Call {
  get inputs(): RuleDisableCall__Inputs {
    return new RuleDisableCall__Inputs(this);
  }

  get outputs(): RuleDisableCall__Outputs {
    return new RuleDisableCall__Outputs(this);
  }
}

export class RuleDisableCall__Inputs {
  _call: RuleDisableCall;

  constructor(call: RuleDisableCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get disabled(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class RuleDisableCall__Outputs {
  _call: RuleDisableCall;

  constructor(call: RuleDisableCall) {
    this._call = call;
  }
}

export class RuleUpdateCall extends ethereum.Call {
  get inputs(): RuleUpdateCall__Inputs {
    return new RuleUpdateCall__Inputs(this);
  }

  get outputs(): RuleUpdateCall__Outputs {
    return new RuleUpdateCall__Outputs(this);
  }
}

export class RuleUpdateCall__Inputs {
  _call: RuleUpdateCall;

  constructor(call: RuleUpdateCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get rule(): RuleUpdateCallRuleStruct {
    return changetype<RuleUpdateCallRuleStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }

  get effects(): Array<RuleUpdateCallEffectsStruct> {
    return this._call.inputValues[2].value.toTupleArray<
      RuleUpdateCallEffectsStruct
    >();
  }
}

export class RuleUpdateCall__Outputs {
  _call: RuleUpdateCall;

  constructor(call: RuleUpdateCall) {
    this._call = call;
  }
}

export class RuleUpdateCallRuleStruct extends ethereum.Tuple {
  get about(): Bytes {
    return this[0].toBytes();
  }

  get affected(): string {
    return this[1].toString();
  }

  get negation(): boolean {
    return this[2].toBoolean();
  }

  get uri(): string {
    return this[3].toString();
  }

  get disabled(): boolean {
    return this[4].toBoolean();
  }
}

export class RuleUpdateCallEffectsStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get value(): i32 {
    return this[1].toI32();
  }

  get direction(): boolean {
    return this[2].toBoolean();
  }
}
