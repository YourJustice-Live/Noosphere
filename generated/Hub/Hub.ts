// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AdminChanged extends ethereum.Event {
  get params(): AdminChanged__Params {
    return new AdminChanged__Params(this);
  }
}

export class AdminChanged__Params {
  _event: AdminChanged;

  constructor(event: AdminChanged) {
    this._event = event;
  }

  get previousAdmin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newAdmin(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class BeaconUpgraded extends ethereum.Event {
  get params(): BeaconUpgraded__Params {
    return new BeaconUpgraded__Params(this);
  }
}

export class BeaconUpgraded__Params {
  _event: BeaconUpgraded;

  constructor(event: BeaconUpgraded) {
    this._event = event;
  }

  get beacon(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ContractCreated extends ethereum.Event {
  get params(): ContractCreated__Params {
    return new ContractCreated__Params(this);
  }
}

export class ContractCreated__Params {
  _event: ContractCreated;

  constructor(event: ContractCreated) {
    this._event = event;
  }

  get name(): string {
    return this._event.parameters[0].value.toString();
  }

  get contractAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ContractURI extends ethereum.Event {
  get params(): ContractURI__Params {
    return new ContractURI__Params(this);
  }
}

export class ContractURI__Params {
  _event: ContractURI;

  constructor(event: ContractURI) {
    this._event = event;
  }

  get param0(): string {
    return this._event.parameters[0].value.toString();
  }
}

export class HubChanged extends ethereum.Event {
  get params(): HubChanged__Params {
    return new HubChanged__Params(this);
  }
}

export class HubChanged__Params {
  _event: HubChanged;

  constructor(event: HubChanged) {
    this._event = event;
  }

  get contractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class UpdatedImplementation extends ethereum.Event {
  get params(): UpdatedImplementation__Params {
    return new UpdatedImplementation__Params(this);
  }
}

export class UpdatedImplementation__Params {
  _event: UpdatedImplementation;

  constructor(event: UpdatedImplementation) {
    this._event = event;
  }

  get name(): string {
    return this._event.parameters[0].value.toString();
  }

  get implementation(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Upgraded extends ethereum.Event {
  get params(): Upgraded__Params {
    return new Upgraded__Params(this);
  }
}

export class Upgraded__Params {
  _event: Upgraded;

  constructor(event: Upgraded) {
    this._event = event;
  }

  get implementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Hub__reactionMakeInputAddRulesStruct extends ethereum.Tuple {
  get game(): Address {
    return this[0].toAddress();
  }

  get ruleId(): BigInt {
    return this[1].toBigInt();
  }
}

export class Hub__reactionMakeInputAssignRolesStruct extends ethereum.Tuple {
  get tokenId(): BigInt {
    return this[0].toBigInt();
  }

  get role(): string {
    return this[1].toString();
  }
}

export class Hub extends ethereum.SmartContract {
  static bind(address: Address): Hub {
    return new Hub("Hub", address);
  }

  beaconGame(): Address {
    let result = super.call("beaconGame", "beaconGame():(address)", []);

    return result[0].toAddress();
  }

  try_beaconGame(): ethereum.CallResult<Address> {
    let result = super.tryCall("beaconGame", "beaconGame():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  beaconReaction(): Address {
    let result = super.call("beaconReaction", "beaconReaction():(address)", []);

    return result[0].toAddress();
  }

  try_beaconReaction(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "beaconReaction",
      "beaconReaction():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  contractURI(): string {
    let result = super.call("contractURI", "contractURI():(string)", []);

    return result[0].toString();
  }

  try_contractURI(): ethereum.CallResult<string> {
    let result = super.tryCall("contractURI", "contractURI():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  gameMake(name_: string, uri_: string): Address {
    let result = super.call("gameMake", "gameMake(string,string):(address)", [
      ethereum.Value.fromString(name_),
      ethereum.Value.fromString(uri_)
    ]);

    return result[0].toAddress();
  }

  try_gameMake(name_: string, uri_: string): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "gameMake",
      "gameMake(string,string):(address)",
      [ethereum.Value.fromString(name_), ethereum.Value.fromString(uri_)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getAssoc(key: string): Address {
    let result = super.call("getAssoc", "getAssoc(string):(address)", [
      ethereum.Value.fromString(key)
    ]);

    return result[0].toAddress();
  }

  try_getAssoc(key: string): ethereum.CallResult<Address> {
    let result = super.tryCall("getAssoc", "getAssoc(string):(address)", [
      ethereum.Value.fromString(key)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getConfig(): Address {
    let result = super.call("getConfig", "getConfig():(address)", []);

    return result[0].toAddress();
  }

  try_getConfig(): ethereum.CallResult<Address> {
    let result = super.tryCall("getConfig", "getConfig():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  proxiableUUID(): Bytes {
    let result = super.call("proxiableUUID", "proxiableUUID():(bytes32)", []);

    return result[0].toBytes();
  }

  try_proxiableUUID(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "proxiableUUID",
      "proxiableUUID():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  reactionMake(
    name_: string,
    uri_: string,
    addRules: Array<Hub__reactionMakeInputAddRulesStruct>,
    assignRoles: Array<Hub__reactionMakeInputAssignRolesStruct>
  ): Address {
    let result = super.call(
      "reactionMake",
      "reactionMake(string,string,(address,uint256)[],(uint256,string)[]):(address)",
      [
        ethereum.Value.fromString(name_),
        ethereum.Value.fromString(uri_),
        ethereum.Value.fromTupleArray(addRules),
        ethereum.Value.fromTupleArray(assignRoles)
      ]
    );

    return result[0].toAddress();
  }

  try_reactionMake(
    name_: string,
    uri_: string,
    addRules: Array<Hub__reactionMakeInputAddRulesStruct>,
    assignRoles: Array<Hub__reactionMakeInputAssignRolesStruct>
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "reactionMake",
      "reactionMake(string,string,(address,uint256)[],(uint256,string)[]):(address)",
      [
        ethereum.Value.fromString(name_),
        ethereum.Value.fromString(uri_),
        ethereum.Value.fromTupleArray(addRules),
        ethereum.Value.fromTupleArray(assignRoles)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  repoAddr(): Address {
    let result = super.call("repoAddr", "repoAddr():(address)", []);

    return result[0].toAddress();
  }

  try_repoAddr(): ethereum.CallResult<Address> {
    let result = super.tryCall("repoAddr", "repoAddr():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  role(): string {
    let result = super.call("role", "role():(string)", []);

    return result[0].toString();
  }

  try_role(): ethereum.CallResult<string> {
    let result = super.tryCall("role", "role():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class AssocAddCall extends ethereum.Call {
  get inputs(): AssocAddCall__Inputs {
    return new AssocAddCall__Inputs(this);
  }

  get outputs(): AssocAddCall__Outputs {
    return new AssocAddCall__Outputs(this);
  }
}

export class AssocAddCall__Inputs {
  _call: AssocAddCall;

  constructor(call: AssocAddCall) {
    this._call = call;
  }

  get key(): string {
    return this._call.inputValues[0].value.toString();
  }

  get contractAddr(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class AssocAddCall__Outputs {
  _call: AssocAddCall;

  constructor(call: AssocAddCall) {
    this._call = call;
  }
}

export class AssocRemoveCall extends ethereum.Call {
  get inputs(): AssocRemoveCall__Inputs {
    return new AssocRemoveCall__Inputs(this);
  }

  get outputs(): AssocRemoveCall__Outputs {
    return new AssocRemoveCall__Outputs(this);
  }
}

export class AssocRemoveCall__Inputs {
  _call: AssocRemoveCall;

  constructor(call: AssocRemoveCall) {
    this._call = call;
  }

  get key(): string {
    return this._call.inputValues[0].value.toString();
  }

  get contractAddr(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class AssocRemoveCall__Outputs {
  _call: AssocRemoveCall;

  constructor(call: AssocRemoveCall) {
    this._call = call;
  }
}

export class GameMakeCall extends ethereum.Call {
  get inputs(): GameMakeCall__Inputs {
    return new GameMakeCall__Inputs(this);
  }

  get outputs(): GameMakeCall__Outputs {
    return new GameMakeCall__Outputs(this);
  }
}

export class GameMakeCall__Inputs {
  _call: GameMakeCall;

  constructor(call: GameMakeCall) {
    this._call = call;
  }

  get name_(): string {
    return this._call.inputValues[0].value.toString();
  }

  get uri_(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class GameMakeCall__Outputs {
  _call: GameMakeCall;

  constructor(call: GameMakeCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class HubChangeCall extends ethereum.Call {
  get inputs(): HubChangeCall__Inputs {
    return new HubChangeCall__Inputs(this);
  }

  get outputs(): HubChangeCall__Outputs {
    return new HubChangeCall__Outputs(this);
  }
}

export class HubChangeCall__Inputs {
  _call: HubChangeCall;

  constructor(call: HubChangeCall) {
    this._call = call;
  }

  get newHubAddr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class HubChangeCall__Outputs {
  _call: HubChangeCall;

  constructor(call: HubChangeCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get openRepo(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get config(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get gameContract(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get reactionContract(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class ReactionMakeCall extends ethereum.Call {
  get inputs(): ReactionMakeCall__Inputs {
    return new ReactionMakeCall__Inputs(this);
  }

  get outputs(): ReactionMakeCall__Outputs {
    return new ReactionMakeCall__Outputs(this);
  }
}

export class ReactionMakeCall__Inputs {
  _call: ReactionMakeCall;

  constructor(call: ReactionMakeCall) {
    this._call = call;
  }

  get name_(): string {
    return this._call.inputValues[0].value.toString();
  }

  get uri_(): string {
    return this._call.inputValues[1].value.toString();
  }

  get addRules(): Array<ReactionMakeCallAddRulesStruct> {
    return this._call.inputValues[2].value.toTupleArray<
      ReactionMakeCallAddRulesStruct
    >();
  }

  get assignRoles(): Array<ReactionMakeCallAssignRolesStruct> {
    return this._call.inputValues[3].value.toTupleArray<
      ReactionMakeCallAssignRolesStruct
    >();
  }
}

export class ReactionMakeCall__Outputs {
  _call: ReactionMakeCall;

  constructor(call: ReactionMakeCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class ReactionMakeCallAddRulesStruct extends ethereum.Tuple {
  get game(): Address {
    return this[0].toAddress();
  }

  get ruleId(): BigInt {
    return this[1].toBigInt();
  }
}

export class ReactionMakeCallAssignRolesStruct extends ethereum.Tuple {
  get tokenId(): BigInt {
    return this[0].toBigInt();
  }

  get role(): string {
    return this[1].toString();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RepAddCall extends ethereum.Call {
  get inputs(): RepAddCall__Inputs {
    return new RepAddCall__Inputs(this);
  }

  get outputs(): RepAddCall__Outputs {
    return new RepAddCall__Outputs(this);
  }
}

export class RepAddCall__Inputs {
  _call: RepAddCall;

  constructor(call: RepAddCall) {
    this._call = call;
  }

  get contractAddr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get domain(): string {
    return this._call.inputValues[2].value.toString();
  }

  get rating(): boolean {
    return this._call.inputValues[3].value.toBoolean();
  }

  get amount(): i32 {
    return this._call.inputValues[4].value.toI32();
  }
}

export class RepAddCall__Outputs {
  _call: RepAddCall;

  constructor(call: RepAddCall) {
    this._call = call;
  }
}

export class SetAssocCall extends ethereum.Call {
  get inputs(): SetAssocCall__Inputs {
    return new SetAssocCall__Inputs(this);
  }

  get outputs(): SetAssocCall__Outputs {
    return new SetAssocCall__Outputs(this);
  }
}

export class SetAssocCall__Inputs {
  _call: SetAssocCall;

  constructor(call: SetAssocCall) {
    this._call = call;
  }

  get key(): string {
    return this._call.inputValues[0].value.toString();
  }

  get contractAddr(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetAssocCall__Outputs {
  _call: SetAssocCall;

  constructor(call: SetAssocCall) {
    this._call = call;
  }
}

export class SetConfigCall extends ethereum.Call {
  get inputs(): SetConfigCall__Inputs {
    return new SetConfigCall__Inputs(this);
  }

  get outputs(): SetConfigCall__Outputs {
    return new SetConfigCall__Outputs(this);
  }
}

export class SetConfigCall__Inputs {
  _call: SetConfigCall;

  constructor(call: SetConfigCall) {
    this._call = call;
  }

  get config(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetConfigCall__Outputs {
  _call: SetConfigCall;

  constructor(call: SetConfigCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpgradeGameImplementationCall extends ethereum.Call {
  get inputs(): UpgradeGameImplementationCall__Inputs {
    return new UpgradeGameImplementationCall__Inputs(this);
  }

  get outputs(): UpgradeGameImplementationCall__Outputs {
    return new UpgradeGameImplementationCall__Outputs(this);
  }
}

export class UpgradeGameImplementationCall__Inputs {
  _call: UpgradeGameImplementationCall;

  constructor(call: UpgradeGameImplementationCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpgradeGameImplementationCall__Outputs {
  _call: UpgradeGameImplementationCall;

  constructor(call: UpgradeGameImplementationCall) {
    this._call = call;
  }
}

export class UpgradeReactionImplementationCall extends ethereum.Call {
  get inputs(): UpgradeReactionImplementationCall__Inputs {
    return new UpgradeReactionImplementationCall__Inputs(this);
  }

  get outputs(): UpgradeReactionImplementationCall__Outputs {
    return new UpgradeReactionImplementationCall__Outputs(this);
  }
}

export class UpgradeReactionImplementationCall__Inputs {
  _call: UpgradeReactionImplementationCall;

  constructor(call: UpgradeReactionImplementationCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpgradeReactionImplementationCall__Outputs {
  _call: UpgradeReactionImplementationCall;

  constructor(call: UpgradeReactionImplementationCall) {
    this._call = call;
  }
}

export class UpgradeToCall extends ethereum.Call {
  get inputs(): UpgradeToCall__Inputs {
    return new UpgradeToCall__Inputs(this);
  }

  get outputs(): UpgradeToCall__Outputs {
    return new UpgradeToCall__Outputs(this);
  }
}

export class UpgradeToCall__Inputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpgradeToCall__Outputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }
}

export class UpgradeToAndCallCall extends ethereum.Call {
  get inputs(): UpgradeToAndCallCall__Inputs {
    return new UpgradeToAndCallCall__Inputs(this);
  }

  get outputs(): UpgradeToAndCallCall__Outputs {
    return new UpgradeToAndCallCall__Outputs(this);
  }
}

export class UpgradeToAndCallCall__Inputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class UpgradeToAndCallCall__Outputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }
}
